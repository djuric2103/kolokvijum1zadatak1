package autobuska_stanica;

import java.util.GregorianCalendar;

public class Polazak {
	
	private String destinacija;
	private GregorianCalendar vreme;
	private int brojSlobodnihMesta;
	
	public String getDestinacija() {
		return destinacija;
	}
	
	public void setDestinacija(String destinacija) {
		if (destinacija == null || destinacija.equals(""))
			System.out.println("GRESKA");
		else
			this.destinacija = destinacija;
	}
	
	public GregorianCalendar getVreme() {
		return vreme;
	}
	
	public void setVreme(GregorianCalendar vreme) {
		if (vreme == null || vreme.before(new GregorianCalendar()))
			System.out.println("GRESKA");
		else					
			this.vreme = vreme;
	}
	
	public int getBrojSlobodnihMesta() {
		return brojSlobodnihMesta;
	}
	
	public void setBrojSlobodnihMesta(int brojSlobodnihMesta) {
		if (brojSlobodnihMesta < 0)
			System.out.println("GRESKA");
		else					
			this.brojSlobodnihMesta = brojSlobodnihMesta;
	}

	@Override
	public String toString() {
		return "DESTINACIJA: " + destinacija + " VREME: "+ vreme.getTime() + " BROJ MESTA: " + brojSlobodnihMesta;
	}

}

package autobuska_stanica;

public class AutobuskaStanica {
	
	private Polazak[] polasci = new Polazak[100];
	
	public void unesiPolazak(Polazak p) {
		if (p == null) {
			System.out.println("GRESKA");
			return;
		}
		
		for (int i=0; i<polasci.length;i++)
			if (polasci[i] == null) {
				polasci[i] = p;
				return;
			}
		
		System.out.println("GRESKA");
	}
	
	public boolean rezervisiKarte(String destinacija, int brojKarata) {
		
		for(int i=0; i<polasci.length; i++) {
			if (polasci[i]!= null &&
				(polasci[i].getDestinacija().equals(destinacija)) &&
				((polasci[i].getBrojSlobodnihMesta()-brojKarata)>=0)) {
				
				int brojSlobodnihMesta = polasci[i].getBrojSlobodnihMesta(); 
				polasci[i].setBrojSlobodnihMesta(brojSlobodnihMesta-brojKarata);
				return true;
			}
		}
		
		return false;
	}
	
	public boolean proslediRezervaciju(AutobuskaStanica[] stanice,
			String destinacija, int brojKarata) {
		boolean statusRezervacije = false;
		
		for(int i=0; i<stanice.length; i++) {
			statusRezervacije = stanice[i].rezervisiKarte(destinacija, brojKarata);
			if (statusRezervacije == true) 
				break;
		}
		
		return statusRezervacije;

	}

}


package ispravka_koda;

public class StringIspisivac {
    public static void ispisiVertikalno(String[] niz) {
        int i=0;
        while(i < 5){
            int j=0;
            while (j < niz.length){
                if (i < niz[j].length())
                    System.out.print(niz[j].charAt(i));
                else	System.out.print(" ");
                j++;
            }
        System.out.println();
        i++;
        }
    }
}


package ispravka_koda;

public class TestStringIspisivac {

	public static void main(String[] args) {
		
		String[] niz =  {"PAS", "MACKA", "LOPTA", "DRVO"};
		
		StringIspisivac.ispisiVertikalno(niz);
	}

}

